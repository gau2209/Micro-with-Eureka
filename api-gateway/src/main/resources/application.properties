#eureka.client.serviceURL.defaultZone=http://localhost:8761/eureka
spring.application.name=api-gateway
#
#logging.level.root=INFO
#logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
#logging.level.org.springframework.cloud.gateway=trace
#
### Product service route
#spring.cloud.gateway.mvc.routes[0].id=product-service
##spring.cloud.gateway.mvc.routes[0].uri=lb://product-service
#spring.cloud.gateway.mvc.routes[0].uri=http://localhost:8081
#spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/api/product
#
### Order service route
#spring.cloud.gateway.mvc.routes[1].id=order-service
##spring.cloud.gateway.mvc.routes[1].uri=lb://order-service
#spring.cloud.gateway.mvc.routes[1].uri=http://localhost:8082
#spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/api/order
#
#### Discovery service route
##spring.cloud.gateway.mvc.routes[2].id=discovery-service
###Discovery ch? có 1 instance vì v?y b? lb
##spring.cloud.gateway.mvc.routes[2].uri=http://localhost:8761
##spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/eureka/web
##spring.cloud.gateway.mvc.routes[2].filters[0]=SetPath=/
#
#### discovery static resource
##spring.cloud.gateway.mvc.routes[3].id=discovery-service-static
##spring.cloud.gateway.mvc.routes[3].uri=http://localhost:8761
##spring.cloud.gateway.mvc.routes[3].predicates[0]=Path=/eureka/**
#
### properties for Keycloak
##-----------------------------------------------
server.port=8080
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-microservice-realm

springdoc.swagger-ui.urls[0].name=Product Service
springdoc.swagger-ui.urls[0].url=/aggregate/product-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=Order Service
springdoc.swagger-ui.urls[1].url=/aggregate/order-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=Inventory Service
springdoc.swagger-ui.urls[2].url=/aggregate/inventory-service/v3/api-docs

# Actuator Endpoints

#B?t thông tin v? Circuit Breaker trong endpoint /actuator/health. Nó cho phép ki?m tra tr?ng thái c?a Circuit Breaker.
management.health.circuitbreakers.enabled=true
#M? t?t c? các endpoint c?a Actuator ra web, ngh?a là các endpoint nh? /actuator/health, /actuator/metrics, /actuator/circuitbreakers ??u có th? ???c truy c?p qua URL.
management.endpoints.web.exposure.include=*

#Cho phép hi?n th? ??y ?? chi ti?t v? tr?ng thái s?c kh?e c?a các d?ch v? (bao g?m thông tin chi ti?t v? các component nh? Circuit Breaker).
management.endpoint.health.show-details=always



#Resilinece4j Properties
#??ng ký ch? s? s?c kh?e cho Circuit Breaker ?? có th? hi?n th? thông qua Actuator (/actuator/health).
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
#C?u hình lo?i c?a s? tr??t (sliding window) theo s? l??ng yêu c?u (COUNT_BASED). Các l?a ch?n khác có th? là TIME_BASED (theo th?i gian).
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
#??t kích th??c c?a c?a s? tr??t là 10, t?c là s? tính toán t? l? l?i trên 10 yêu c?u g?n nh?t.
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
#Ng??ng t? l? l?i là 50%. N?u t? l? l?i v??t quá 50% trong c?a s? tr??t, Circuit Breaker s? chuy?n sang tr?ng thái "Open".
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
#Th?i gian ch? trong tr?ng thái "Open" là 5 giây. Sau th?i gian này, Circuit Breaker s? chuy?n sang tr?ng thái "Half-Open" ?? th? l?i d?ch v?.
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
#Cho phép t?i ?a 3 yêu c?u trong tr?ng thái "Half-Open". N?u các yêu c?u này thành công, Circuit Breaker s? tr? l?i tr?ng thái "Closed".
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
#Kích ho?t t? ??ng chuy?n t? tr?ng thái "Open" sang "Half-Open" sau khi th?i gian ch? (waitDurationInOpenState) k?t thúc.
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
#S? l??ng yêu c?u t?i thi?u là 5 tr??c khi b?t ??u ?ánh giá t? l? l?i. ?i?u này tránh vi?c chuy?n tr?ng thái Circuit Breaker d?a trên s? li?u không ?? (s? l??ng yêu c?u quá ít).
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5

#Resilience4J Timeout Properties
# C?u hình gi?i h?n th?i gian cho các l?nh (command) là 3 giây. N?u l?nh không hoàn thành trong th?i gian này, nó s? b? h?y và ???c coi là l?i.
resilience4j.timelimiter.configs.default.timeout-duration=3s

#Resilience4J retry properties
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=2s